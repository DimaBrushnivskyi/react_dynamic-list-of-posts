{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","components/UserSelect.tsx","App.tsx","index.tsx"],"names":["BASE_URL","requestUsers","a","fetch","response","ok","Error","status","statusText","json","data","fetchAllPosts","getUserPosts","userId","posts","getPostDetails","postId","PostsList","onPostsSet","onPostId","selectedPostId","fetchPosts","result","useEffect","fetchIndividualPosts","className","map","post","title","body","type","onClick","id","getPostComments","createComment","name","email","method","JSON","stringify","headers","removeComment","commentId","NewCommentForm","useState","setName","setEmail","comment","setComment","handleSubmit","e","preventDefault","onSubmit","value","placeholder","onChange","target","PostDetails","onCommentsSet","comments","isComment","setIsComment","setPost","fetchComments","commentsArr","prev","length","UserSelect","users","onUserSelect","user","App","setPosts","setUsers","setComments","selectedUserId","setSelectedUserId","setSelectedPostId","fetchUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db9f357c.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const requestUsers = async () => {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status}\n      - StatusText: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n\nexport const fetchAllPosts = async () => {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status}\n      - StatusText: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n\nexport const getUserPosts = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status}\n      - StatusText: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n","import React, { Dispatch, SetStateAction, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts, fetchAllPosts } from '../../api/posts';\n\ntype Props = {\n  posts: Post[],\n  userId: number,\n  onPostsSet: Dispatch<SetStateAction<Post[]>>,\n  onPostId: Dispatch<SetStateAction<number>>,\n  selectedPostId: number,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  userId,\n  onPostsSet,\n  onPostId,\n  selectedPostId,\n}) => {\n  const fetchPosts = async () => {\n    const result = await fetchAllPosts();\n\n    onPostsSet(result);\n  };\n\n  useEffect(() => {\n    if (userId === 0) {\n      fetchPosts();\n    }\n  }, [userId]);\n\n  const fetchIndividualPosts = async () => {\n    const result = await getUserPosts(userId);\n\n    if (userId) {\n      onPostsSet(result);\n    }\n  };\n\n  useEffect(() => {\n    fetchIndividualPosts();\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n                {post.title}\n              </b>\n              {' - '}\n              {post.body}\n            </div>\n\n            {!selectedPostId ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onPostId(post.id);\n                }}\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  onPostId(0);\n                }}\n              >\n                Close\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async (postId: number | 0) => {\n  const response = await fetch(`\n  ${BASE_URL}/comments?postId=${postId}\n  `);\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status}\n      - StatusText: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n\nexport const createComment = async (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n) => {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n\n  const data = await response.json();\n\n  return data;\n};\n\nexport const removeComment = async (commentId: number) => {\n  const response = await fetch(`${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' });\n\n  const data = await response.json();\n\n  return data;\n};\n","import React, { FormEvent, useState } from 'react';\n// import { BASE_URL } from '../../api/api';\nimport './NewCommentForm.scss';\nimport { createComment } from '../../api/comments';\n\ntype Props = {\n  postId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setComment('');\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    createComment(postId, name, email, comment);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={async (e) => {\n        try {\n          await handleSubmit(e);\n          reset();\n        } catch (error) {\n          throw new Error('Error happened');\n        }\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={comment}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setComment(e.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, {\n  Dispatch, SetStateAction, useEffect, useState,\n} from 'react';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, removeComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\n\ntype Props = {\n  postId: number,\n  onCommentsSet: Dispatch<SetStateAction<Comment[]>>,\n  comments: Comment[],\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  postId,\n  onCommentsSet,\n  comments,\n}) => {\n  const [isComment, setIsComment] = useState(false);\n  const [post, setPost] = useState<Post | null>(null);\n\n  const fetchPosts = async () => {\n    const posts = await getPostDetails(postId);\n\n    setPost(posts);\n  };\n\n  const fetchComments = async () => {\n    const commentsArr = await getPostComments(postId);\n\n    onCommentsSet(commentsArr);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n    fetchComments();\n  }, [postId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.title}</p>\n      </section>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => {\n          setIsComment(prev => !prev);\n        }}\n      >\n        {!isComment ? 'Show' : 'Hide'}\n        {' '}\n        {comments.length}\n        {' '}\n        {comments.length === 1 ? 'comment' : 'comments'}\n      </button>\n\n      {isComment && (\n        <section className=\"PostDetails__comments\">\n\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  users: User[],\n  onUserSelect: Dispatch<SetStateAction<number>>,\n};\n\nexport const UserSelect: React.FC<Props> = ({\n  users,\n  onUserSelect,\n}) => {\n  return (\n    <label>\n      Select a user: &nbsp;\n      <select\n        className=\"App__user-selector\"\n        onChange={(e) => {\n          const id = +e.target.value;\n\n          onUserSelect(id);\n        }}\n      >\n        <option value={0}>All Users</option>\n        {users.map(user => (\n          <option\n            key={user.id}\n            value={user.id}\n          >\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect';\nimport { requestUsers } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const fetchUsers = async () => {\n    const data = await requestUsers();\n\n    setUsers(data);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          users={users}\n          onUserSelect={setSelectedUserId}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            userId={selectedUserId}\n            onPostsSet={setPosts}\n            onPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {(!!selectedPostId) && (\n            <PostDetails\n              postId={selectedPostId}\n              onCommentsSet={setComments}\n              comments={comments}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}